version: "3.5"
services:

  mongo:
    # image: mongo
    image: dc_mongo_db
    build:
      context: .
      dockerfile_inline: |
        FROM mongo
        ADD https://raw.githubusercontent.com/strokovnjaka/shroomate/main/data/db_species.json https://raw.githubusercontent.com/strokovnjaka/shroomate/main/data/db_users.json /
    container_name: dc_mongo_db
    hostname: dc_mongo
    volumes:
      - ${PWD}/mongodb:/data/db
    profiles:
      - run
      - setup
    networks:
      - dbnet

  app:
    container_name: dc_app
    depends_on:
      - mongo
    image: dc_app
    build: 
      context: https://github.com/strokovnjaka/shroomate.git
      dockerfile: dockerfile
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - MONGODB_ATLAS_URI="mongodb://dc_mongo/shroomate"
    profiles:
      - run
    hostname: dc_app
    networks:
      - appnet
      - dbnet

  nginx:
    container_name: dc_nginx
    depends_on:
      - app
    image: nginx:alpine
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ${PWD}/templates:/etc/nginx/templates
      - ${PWD}/certbot/www/:/var/www/certbot/:ro
      - ${PWD}/certbot/conf/:/etc/letsencrypt/:ro
    profiles:
      - run
    networks:
      - appnet
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  certbot:
    container_name: dc_certbot
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    profiles:
      - setup
    depends_on:
      - nginx_cert
    command: certonly --webroot -w /var/www/certbot -d ${DOMAIN} --non-interactive --agree-tos --register-unsafely-without-email --test-cert

  nginx_cert:
    container_name: dc_nginx_cert
    image: nginx:alpine
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ${PWD}/templates_cert:/etc/nginx/templates
      - ${PWD}/certbot/www/:/var/www/certbot/:ro
    profiles:
      - setup
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

# docker exec mongo mongoimport --db shroomate --collection Species --mode upsert --upsertFields id --jsonArray --file /db_species.json
# docker exec mongo mongoimport --db shroomate --collection Users --mode upsert --upsertFields id --jsonArray --file /db_users.json


networks:
  dbnet:
  appnet:
